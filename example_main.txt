#include <Arduino.h>
#include <ArduinoLog.h>
#include <Wire.h>

#include "bmi270.h"

#define USE_FLASH(s) (s)
// uint8_t init_data[100] = {0};

// Reading init data value
uint8_t init_data_value[3] = {0};
////////////
BMI270 imu = BMI270(&Wire);
bmi270_accelerometer_data xl_data;
uint8_t temp_data = 0xFF;

void setup() {
  delay(3000);

  Serial.begin(115200);
  Log.begin(6, &Serial);

  // Wire.begin(21, 22);

  Wire.begin();

  delay(1);
  imu.begin();
  imu.soft_reset();
  delay(200);

  imu.bmi270_i2c_read(&temp_data, imu.CHIP_ID, 1);

  Log.trace(F("Chip ID= %s\n"), USE_FLASH(__func__));
  // Log.trace(F("Chip ID= %X\n"), FPSTR(temp_data));

  bool result = imu.sensor_init();
  if (result == true) {
    // Log.trace("Sensor init success\n");
  }
  delay(1000);

  // imu.bmi270_i2c_read(&temp_data, imu.PWR_CTRL, 1);
  // Log.trace("PWR_CTRL = %x\n", temp_data);

  // uint init_addr = 0;
  // imu.i2c_read_init_data(init_data_value, init_addr, 2);

  imu.bmi270_i2c_read(&temp_data, imu.INTERNAL_STATUS, 1);
  // Log.trace("Internal Status= %X\n", temp_data);

  imu.bmi270_i2c_read(&temp_data, imu.PWR_CTRL, 1);
  // Log.trace("PWR CTRL = %X\n", temp_data);

  imu.normal_mode();

  imu.bmi270_i2c_read(&temp_data, imu.PWR_CTRL, 1);
  // Log.trace("PWR CTRL = %X\n", temp_data);

  // Log.trace("Read INIT DATA[%d] = %X | %X | \n", init_addr,
  // init_data_value[0], imu.get_config_file_data(init_addr)); Log.trace("Read
  // INIT DATA[%d] = %X | %X | \n", init_addr + 1, init_data_value[1],
  // imu.get_config_file_data(init_addr + 1));

  delay(5000);
}

void loop() {
  imu.bmi270_i2c_read(&temp_data, imu.STATUS, 1);
  // Log.trace("STATUS = %B\n", temp_data);

  // if ((temp_data & 0b10000000) == 0b10000000) {
  //     imu.bmi270_i2c_read(&temp_data, imu.DATA_8, 1);
  // } else {
  // }

  // imu.bmi270_i2c_read(&temp_data, imu.DATA_8, 1);
  // Log.trace("Data_14 = %X\n", temp_data);
  imu.read(xl_data);

  // Log.trace("A_x: %d A_y:%d A_z:%d \n", xl_data.x, xl_data.y, xl_data.z);

  delay(1000);
}